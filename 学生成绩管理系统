#include<iostream>
#include<cstring>
#include<cstdlib>
#include<conio.h>
#include<ctime>
#include<algorithm>
#include <fstream>
#define MAX 1000
using namespace std;
class User
{
public:
	char id[20];
	char pwd[20];
};
//课程基本信息
class base_subject
{
public:
	char id[20];//课程编号
	char name[20];//课程名称
	char type[20];//课程性质
};

//存放课程信息
class Subject :public base_subject
{
public:
	int hour;//总学时
	int score;//学分
	char time[20];//课程时间
	int num;//选修人数
};

//学生基本信息
class base_student
{
public:
	char id[20];//学号
	char name[20];//姓名

};

//存放学生信息
class Student :public User
{
public:
	char id[20];//学号
	char name[20];//姓名
	char birthday[20];//出生年月
	char department[20];//系别
	char phone[20];//联系电话
	char class_id[20];//所属班级
	char pwd[20];//密码
	friend ostream& operator<<(ostream& output, Student x);
};
ostream& operator<<(ostream& output, Student x)
{
	output << "姓名为: " << x.name << "\t" << "学号为: " << x.id << "\t" << "班级名称为: " << x.class_id << "\t" << "系别为: " << x.department << endl;
	return output;
}
//班级信息
class Classd
{
public:
	char id[20];//班级编号
	char name[20];//班级名称
};

//教师信息
class Teacher :public User
{
public:
	char id[20];//教师编号
	char name[20];//教师名称
	char class_id[20];//所属班级
	char pwd[20];//密码
};


//存放选课信息
class SelectCourse
{
public:
	char stu_id[20];//学号
	char sub_id[20];//课程编号
	float score;//成绩
};

class List
{
public:
	Subject subject[100];
	int s_n;//课程数量
	Student student[100];
	int n;//学生数量
	SelectCourse s_course[100];
	int num;//可供选课的数量
	Classd classd[100];
	int classd_num;//班级数量
	Teacher teacher[100];
	int teacher_num;//教师数量



public:
	List()
	{
		s_n = 0;
		n = 0;
		num = 0;
		classd_num = 0;
		teacher_num = 0;
	}

	void add_class();//增加班级信息
	void select_class();//查找班级信息
	void delete_class();//删除班级信息
	void update_class();//修改班级信息
	void show_class();//浏览班级信息
	void save_class();//保存班级信息
	void read_class();//读取班级信息


	void add_teacher();//增加教师信息
	void select_teacher();//查找教师信息
	void delete_teacher();//删除教师信息
	void update_teacher();//修改教师信息
	void show_teacher();//浏览教师信息
	void save_teacher();//保存教师信息
	void read_teacher();//读取教师信息

	int login_teacher();//教师登录
	int login_student();//学生登录
	int admin_login();//管理员登录
	void pwd_teacher(int index);//教师修改密码
	void pwd_student(int index);//学生修改密码



	void add_subject();//增加课程信息
	void select_subject();//查找课程信息
	void delete_subject();//删除课程信息
	void update_subject();//修改课程信息
	void show_subject();//浏览课程信息
	void save_subject();//保存课程信息
	void read_subject();//读取课程信息



	void add_student();//增加学生信息
	void select_student();//查找学生信息
	void delete_student();//删除学生信息
	void update_student();//修改学生信息
	void show_student();//浏览学生信息
	void save_student();//保存学生信息
	void read_student();//读取学生信息


	void choose();//选课
	void refund();//退课
	void show();//查看选课信息
	void save();//保存选课信息
	void read();//读取选课信息

	void sort_score();//学生成绩排序
	void add_score();//学生课程成绩打分


};


//保存课程信息
void List::save_subject()
{
	ofstream outFile;
	outFile.open("subject.txt");
	int i = 0, j = 0;

	for (i = 0; i < s_n; i++)
	{
		outFile << subject[i].id << " "
			<< subject[i].name << " "
			<< subject[i].type << " "
			<< subject[i].hour << " "
			<< subject[i].score << " "
			<< subject[i].time << " "
			<< subject[i].num << endl;


	}
	cout << "文件保存成功！" << endl;
	outFile.close();
}
//读取课程信息
void List::read_subject()
{
	ifstream in("subject.txt", ios::in);
	if (!in.is_open())
	{
		cout << "打开文件失败" << endl;
		return;

	}

	while (!in.eof())
	{
		in >> subject[s_n].id
			>> subject[s_n].name
			>> subject[s_n].type
			>> subject[s_n].hour
			>> subject[s_n].score
			>> subject[s_n].time
			>> subject[s_n].num;


		s_n++;
	}


	cout << "文件导入成功！" << endl;
	in.close();
}


//保存学生信息
void List::save_student()
{
	ofstream outFile;
	outFile.open("student.txt");
	int i = 0, j = 0;

	for (i = 0; i < n; i++)
	{
		outFile << student[i].id << " "
			<< student[i].name << " "
			<< student[i].birthday << " "
			<< student[i].department << " "
			<< student[i].phone << " "
			<< student[i].pwd << " "
			<< student[i].class_id << endl;


	}
	cout << "文件保存成功！" << endl;
	outFile.close();
}
//读取学生信息
void List::read_student()
{
	ifstream in("student.txt", ios::in);
	if (!in.is_open())
	{
		cout << "打开文件失败" << endl;
		return;

	}

	while (!in.eof())
	{
		in >> student[n].id
			>> student[n].name
			>> student[n].birthday
			>> student[n].department
			>> student[n].phone
			>> student[n].pwd
			>> student[n].class_id;

		n++;
	}

	cout << "文件导入成功！" << endl;
	in.close();
}


//保存选课信息
void List::save()
{
	ofstream outFile;
	outFile.open("select.txt");
	int i = 0, j = 0;

	for (i = 0; i < num; i++)
	{
		outFile << s_course[i].stu_id << " "
			<< s_course[i].sub_id << " "
			<< s_course[i].score << endl;


	}
	cout << "文件保存成功！" << endl;
	outFile.close();
}
//读取选课信息
void List::read()
{
	ifstream in("select.txt", ios::in);
	if (!in.is_open())
	{
		cout << "打开文件失败" << endl;
		return;

	}

	while (!in.eof()
	)
	{
	
		in >> s_course[num].stu_id
			>> s_course[num].sub_id
			>> s_course[num].score;
		num++;
	}
	

	cout << "文件导入成功！" << endl;
	in.close();
}

//保存班级信息
void List::save_class()
{
	ofstream outFile;
	outFile.open("class.txt");
	int i = 0, j = 0;

	for (i = 0; i < classd_num; i++)
	{
		outFile << classd[i].id << " "
			<< classd[i].name << endl;


	}
	cout << "文件保存成功！" << endl;
	outFile.close();
}
//读取班级信息
void List::read_class()
{
	ifstream in("class.txt", ios::in);
	if (!in.is_open())
	{
		cout << "打开文件失败" << endl;
		return;

	}

	while (!in.eof())
	{
	
		in >> classd[classd_num].id
			>> classd[classd_num].name;

		classd_num++;
	}
	

	cout << "文件导入成功！" << endl;
	in.close();
}


//保存教师信息
void List::save_teacher()
{
	ofstream outFile;
	outFile.open("teacher.txt");
	int i = 0, j = 0;

	for (i = 0; i < teacher_num; i++)
	{
		outFile << teacher[i].id << " "
			<< teacher[i].name << " "
			<< teacher[i].class_id << " "
			<< teacher[i].pwd << endl;


	}
	cout << "文件保存成功！" << endl;
	outFile.close();
}
//读取教师信息
void List::read_teacher()
{
	ifstream in("teacher.txt", ios::in);
	if (!in.is_open())
	{
		cout << "打开文件失败" << endl;
		return;

	}

	while (!in.eof()
	)
	{
		in >> teacher[teacher_num].id
			>> teacher[teacher_num].name
			>> teacher[teacher_num].class_id
			>> teacher[teacher_num].pwd;

		teacher_num++;
	}

	
	cout << "文件导入成功！" << endl;
	in.close();
}


//增加课程信息
void List::add_subject()
{
one:cout << "请输入课程编号：";
	cin >> subject[s_n].id;
	for (int i = 0; i < s_n; i++)
	{
		if (!strcmp(subject[s_n].id, subject[i].id))
		{
			cout << "存在该课程编号，请重新输入！" << endl;
			goto one;
		}
	}
	cout << "请输入课程名称：";
	cin >> subject[s_n].name;
	cout << "请输入课程性质：";
	cin >> subject[s_n].type;
	cout << "请输入课程总学时：";
	cin >> subject[s_n].hour;
	cout << "请输入课程学分：";
	cin >> subject[s_n].score;
	cout << "请输入课程时间：";
	cin >> subject[s_n].time;
	subject[s_n].num = 0;
	s_n++;
	cout << "添加课程信息成功！" << endl;
};
//查询课程信息
void List::select_subject()
{
	if (s_n <= 0)
	{
		cout << "没有课程信息，请先录入！" << endl;
		return;
	}
	cout << "1.按课程编号查询  2.按课程名称查询：" << endl;
	int chioce;
	cin >> chioce;
	if (chioce == 1)
	{
		cout << "请输入查询的课程编号：";
		char id[20];
		int temp = 0;
		cin >> id;
		for (int i = 0; i < s_n; i++)
		{
			if (!strcmp(id, subject[i].id))
			{
				temp++;
				cout << "课程编号：" << subject[i].id;
				cout << "  课程名称：" << subject[i].name;
				cout << "  课程性质：" << subject[i].type;
				cout << "  课程总学时：" << subject[i].hour;
				cout << "  课程学分：" << subject[i].score;
				cout << "  课程时间：" << subject[i].time;
				cout << "  课程选修人数：" << subject[i].num << endl;
				break;
			}
		}
		if (temp == 0)
		{
			cout << "查找的课程信息不存在！" << endl;
		}
	}
	else if (chioce == 2)
	{
		cout << "请输入查询的课程名称：";
		char name[20];
		int temp = 0;
		cin >> name;
		for (int i = 0; i < s_n; i++)
		{
			if (!strcmp(name, subject[i].name))
			{
				temp++;
				cout << "课程编号：" << subject[i].id;
				cout << "  课程名称：" << subject[i].name;
				cout << "  课程性质：" << subject[i].type;
				cout << "  课程总学时：" << subject[i].hour;
				cout << "  课程学分：" << subject[i].score;
				cout << "  课程时间：" << subject[i].time;
				cout << "  课程选修人数：" << subject[i].num << endl;
				break;
			}
		}
		if (temp == 0)
		{
			cout << "查找的课程信息不存在！" << endl;
		}
	}
	else
	{
		cout << "输入有误！" << endl;
	}
}
//删除课程信息
void List::delete_subject()
{
	if (s_n <= 0)
	{
		cout << "没有课程信息，请先录入！" << endl;
		return;
	}
	cout << "请输入删除的课程编号：";
	char id[20];
	int temp = 0;
	cin >> id;
	for (int i = 0; i < s_n; i++)
	{
		if (!strcmp(id, subject[i].id))
		{
			temp++;
			cout << "删除信息如下：" << endl;
			cout << "课程编号：" << subject[i].id;
			cout << "  课程名称：" << subject[i].name;
			cout << "  课程性质：" << subject[i].type;
			cout << "  课程总学时：" << subject[i].hour;
			cout << "  课程学分：" << subject[i].score;
			cout << "  课程时间：" << subject[i].time;
			cout << "  课程选修人数：" << subject[i].num << endl;
			for (int j = i; j < s_n - 1; j++)
			{
				subject[j] = subject[j + 1];
			}
			s_n--;
			cout << "删除课程信息成功！" << endl;
			break;
		}
	}
	if (temp == 0)
	{
		cout << "删除的课程信息不存在！" << endl;
	}

}
//修改课程信息
void List::update_subject()
{
	if (s_n <= 0)
	{
		cout << "没有课程信息，请先录入！" << endl;
		return;
	}
	cout << "请输入修改的课程编号：";
	char id[20];
	int temp = 0;
	cin >> id;
	for (int i = 0; i < s_n; i++)
	{
		if (!strcmp(id, subject[i].id))
		{
			temp++;
			cout << "修改信息如下：" << endl;
			cout << "课程编号：" << subject[i].id;
			cout << "  课程名称：" << subject[i].name;
			cout << "  课程性质：" << subject[i].type;
			cout << "  课程总学时：" << subject[i].hour;
			cout << "  课程学分：" << subject[i].score;
			cout << "  课程时间：" << subject[i].time;
			cout << "  课程选修人数：" << subject[i].num << endl;
			cout << "========================================" << endl;
			cout << "请输入新的课程名称：";
			cin >> subject[i].name;
			cout << "请输入新的课程性质：";
			cin >> subject[i].type;
			cout << "请输入新的课程总学时：";
			cin >> subject[i].hour;
			cout << "请输入新的课程学分：";
			cin >> subject[i].score;
			cout << "请输入新的课程时间：";
			cin >> subject[i].time;
			subject[i].num = 0;
			cout << "修改成功！" << endl;
			break;
		}
	}
	if (temp == 0)
	{
		cout << "编辑的课程信息不存在！" << endl;
	}

}
bool compareSubject(Subject& x1, Subject& x2)
{
	return x1.id < x2.id;
}
//浏览课程信息
void List::show_subject()
{
	if (s_n <= 0)
	{
		cout << "没有课程信息，请先录入！" << endl;
		return;
	}
	for (int i = 0; i < s_n; i++)
	{
		cout << "课程编号：" << subject[i].id;
		cout << "  课程名称：" << subject[i].name;
		cout << "  课程性质：" << subject[i].type;
		cout << "  课程总学时：" << subject[i].hour;
		cout << "  课程学分：" << subject[i].score;
		cout << "  课程时间：" << subject[i].time;
		cout << "  课程选修人数：" << subject[i].num << endl;
	}
	/*cout << "\t\t1.无排序输出  2.排序后输出";
	int choice;
	cin >> choice;
	cout << endl;

	switch (choice)
	{
	case 1:
	{
		for (int i = 0; i < s_n; i++)
		{
			cout << "课程编号：" << subject[i].id;
			cout << "  课程名称：" << subject[i].name;
			cout << "  课程性质：" << subject[i].type;
			cout << "  课程总学时：" << subject[i].hour;
			cout << "  课程学分：" << subject[i].score;
			cout << "  课程时间：" << subject[i].time;
			cout << "  课程选修人数：" << subject[i].num << endl;
		}
	}

	case 2:
	{
		Subject temp[100];
		for (int i = 0; i < s_n; i++)
		{
			temp[i] = subject[i];
		}
		sort(temp, temp + s_n, compareSubject);
		for (int i = 0; i < s_n; i++)
		{
			cout << "课程编号：" << temp[i].id;
			cout << "  课程名称：" << temp[i].name;
			cout << "  课程性质：" << temp[i].type;
			cout << "  课程总学时：" << temp[i].hour;
			cout << "  课程学分：" << temp[i].score;
			cout << "  课程时间：" << temp[i].time;
			cout << "  课程选修人数：" << temp[i].num << endl;
		}
	}
	}*/
}




//增加班级信息
void List::add_class()
{
one:
	cout << "请输入班级编号：";
	cin >> classd[classd_num].id;
	for (int i = 0; i < classd_num; i++)
	{
		if (!strcmp(classd[classd_num].id, classd[i].id))
		{
			cout << "存在该班级信息，请重新输入！" << endl;
			goto one;
		}
	}
	cout << "请输入班级名称：";
	cin >> classd[classd_num].name;


	classd_num++;
	cout << "添加班级信息成功！" << endl;
}
//查询班级信息
void List::select_class()
{
	cout << "请输入查询的班级名称：";
	char name[20];
	int temp = 0;
	cin >> name;
	for (int i = 0; i < classd_num; i++)
	{
		if (!strcmp(name, classd[i].name))
		{
			temp++;
			cout << "班级编号：" << classd[i].id;
			cout << "  班级名称：" << classd[i].name << endl;
			for (int j = 0; j < n; j++)
			{
				if (!strcmp(classd[i].id, student[j].class_id))
				{
					cout << student[j];
				}
			}
			break;
		}
	}
	if (temp == 0)
	{
		cout << "查找的班级信息不存在！" << endl;
	}
}
//删除班级信息
void List::delete_class()
{
	if (n <= 0)
	{
		cout << "没有班级信息，请先录入！" << endl;
		return;
	}
	cout << "请输入删除的班级编号：";
	char id[20];
	int temp = 0;
	cin >> id;
	for (int i = 0; i < classd_num; i++)
	{
		if (!strcmp(id, classd[i].id))
		{
			temp++;
			for (int j = i; j < classd_num - 1; j++)
			{
				classd[j] = classd[j + 1];
			}
			classd_num--;
			cout << "删除班级信息成功！" << endl;
			break;
		}
	}
	if (temp == 0)
	{
		cout << "删除的班级信息不存在！" << endl;
	}

}
//修改班级信息
void List::update_class()
{
	if (n <= 0)
	{
		cout << "没有班级信息，请先录入！" << endl;
		return;
	}
	cout << "请输入修改的班级编号：";
	char id[20];
	int temp = 0;
	cin >> id;
	for (int i = 0; i < classd_num; i++)
	{
		if (!strcmp(id, classd[i].id))
		{
			temp++;
			cout << "请输入新的班级名称：";
			cin >> classd[i].name;
			cout << "修改成功！" << endl;
			break;
		}
	}
	if (temp == 0)
	{
		cout << "编辑的班级信息不存在！" << endl;
	}

}
bool compareClassid(Classd x, Classd y)
{
	return x.id < y.id;
}
//浏览班级信息
void List::show_class()
{
	if (classd_num <= 0)
	{
		cout << "没有班级信息，请先录入！" << endl;
		return;
	}
	for (int i = 0; i < classd_num; i++)
	{
		cout << "班级编号：" << classd[i].id;
		cout << "  班级名称：" << classd[i].name << endl;
	}
	/*cout << "\t\t 1.无序输出  2.有序输出";
	int choice;
	cin >> choice;
	cout << endl;
	switch (choice)
	{
	case 1:
	{
		for (int i = 0; i < classd_num; i++)
		{
			cout << "班级编号：" << classd[i].id;
			cout << "  班级名称：" << classd[i].name << endl;
		}
	}
	case 2:
	{
		Classd temp[200];
		for (int i = 0; i < classd_num; i++)
		{
			temp[i] = classd[i];
		}
		sort(temp, temp + classd_num, compareClassid);
		for (int i = 0; i < classd_num; i++)
		{
			cout << "班级编号：" << temp[i].id;
			cout << "  班级名称：" << temp[i].name << endl;
		}
	}
	}*/
}



//增加教师信息
void List::add_teacher()
{
one:cout << "请输入教师编号：";
	cin >> teacher[teacher_num].id;
	for (int i = 0; i < teacher_num; i++)
	{
		if (!strcmp(teacher[teacher_num].id, teacher[i].id))
		{
			cout << "存在该教师编号，请重新输入！" << endl;
			goto one;
		}
	}
	cout << "请输入教师名称：";
	cin >> teacher[teacher_num].name;
	cout << "请输入教师所属班级的编号：";
	cin >> teacher[teacher_num].class_id;
	int flag = 0;
	for (int i = 0; i < classd_num; i++)
	{
		if (!strcmp(teacher[teacher_num].class_id, classd[i].id))
		{
			flag++;
		}
	}
	if (flag == 0)
	{
		cout << "不存在该班级，添加失败!" << endl;
		return;
	}

	cout << "请输入教师密码：";
	cin >> teacher[teacher_num].pwd;

	teacher_num++;
	cout << "添加教师信息成功！" << endl;
};
//查询教师信息
void List::select_teacher()
{
	if (teacher_num <= 0)
	{
		cout << "没有教师信息，请先录入！" << endl;
		return;
	}
	cout << "1.按教师编号查询  2.按教师名称查询：" << endl;
	int chioce;
	cin >> chioce;
	if (chioce == 1)
	{
		cout << "请输入查询的教师编号：";
		char id[20];
		int temp = 0;
		cin >> id;
		for (int i = 0; i < teacher_num; i++)
		{
			if (!strcmp(id, teacher[i].id))
			{
				temp++;
				cout << "教师编号：" << teacher[i].id;
				cout << "  教师名称：" << teacher[i].name;
				cout << "  所属班级：" << teacher[i].class_id << endl;
				break;
			}
		}
		if (temp == 0)
		{
			cout << "查找的教师信息不存在！" << endl;
		}
	}
	else if (chioce == 2)
	{
		cout << "请输入查询的教师名称：";
		char name[20];
		int temp = 0;
		cin >> name;
		for (int i = 0; i < teacher_num; i++)
		{
			if (!strcmp(name, teacher[i].name))
			{
				temp++;
				cout << "教师编号：" << teacher[i].id;
				cout << "  教师名称：" << teacher[i].name;
				cout << "  所属班级：" << teacher[i].class_id << endl;
				break;
			}
		}
		if (temp == 0)
		{
			cout << "查找的教师信息不存在！" << endl;
		}
	}
	else
	{
		cout << "输入有误！" << endl;
	}
}
//删除教师信息
void List::delete_teacher()
{
	if (teacher_num <= 0)
	{
		cout << "没有教师信息，请先录入！" << endl;
		return;
	}
	cout << "请输入删除的教师编号：";
	char id[20];
	int temp = 0;
	cin >> id;
	for (int i = 0; i < teacher_num; i++)
	{
		if (!strcmp(id, teacher[i].id))
		{
			temp++;
			for (int j = i; j < teacher_num - 1; j++)
			{
				teacher[j] = teacher[j + 1];
			}
			teacher_num--;
			cout << "删除教师信息成功！" << endl;
			break;
		}
	}
	if (temp == 0)
	{
		cout << "删除的教师信息不存在！" << endl;
	}

}
//修改教师信息
void List::update_teacher()
{
	if (teacher_num <= 0)
	{
		cout << "没有教师信息，请先录入！" << endl;
		return;
	}
	cout << "请输入修改的教师编号：";
	char id[20];
	int temp = 0;
	cin >> id;
	for (int i = 0; i < teacher_num; i++)
	{
		if (!strcmp(id, teacher[i].id))
		{
			temp++;
			cout << "请输入新的教师名称：";
			cin >> teacher[i].name;
			cout << "修改成功！" << endl;
			break;
		}
	}
	if (temp == 0)
	{
		cout << "编辑的教师信息不存在！" << endl;
	}

}
bool compareTeacherid(Teacher x, Teacher y)
{
	return x.id < y.id;
}
//浏览教师信息
void List::show_teacher()
{
	if (teacher_num <= 0)
	{
		cout << "没有教师信息，请先录入！" << endl;
		return;
	}
	for (int i = 0; i < teacher_num; i++)
	{

		cout << "教师编号：" << teacher[i].id;
		cout << "  教师名称：" << teacher[i].name;
		cout << "  所属班级：" << teacher[i].class_id << endl;
	}
	/*cout << "\t\t 1.无序输出  2.有序输出";
	int choice;
	cin >> choice;
	switch (choice)
	{
	case 1:
	{
		for (int i = 0; i < teacher_num; i++)
		{

			cout << "教师编号：" << teacher[i].id;
			cout << "  教师名称：" << teacher[i].name;
			cout << "  所属班级：" << teacher[i].class_id << endl;
		}
	}
	case 2:
	{
		Teacher temp[50];
		for (int i = 0; i < teacher_num; i++)
		{
			temp[i] = teacher[i];

		}
		sort(temp, temp + teacher_num, compareTeacherid);
		for (int i = 0; i < teacher_num; i++)
		{
			cout << "教师编号：" << temp[i].id;
			cout << "  教师名称：" << temp[i].name;
			cout << "  所属班级：" << temp[i].class_id << endl;
		}
	}
	default:
	{
		cout << "\t格式输入错误!" << endl;
		system("pause");
	}
	}*/
}


//增加学生信息
void List::add_student()
{
one:cout << "请输入学号：";
	cin >> student[n].id;
	for (int i = 0; i < n; i++)
	{
		if (!strcmp(student[n].id, student[i].id))
		{
			cout << "存在该学号，请重新输入！" << endl;
			goto one;
		}
	}
	cout << "请输入姓名：";
	cin >> student[n].name;
	cout << "请输入出生年月：";
	cin >> student[n].birthday;
	cout << "请输入系别：";
	cin >> student[n].department;
	cout << "请输入联系电话：";
	cin >> student[n].phone;
	cout << "请输入密码：";
	cin >> student[n].pwd;
	cout << "请输入所属班级的编号：";
	cin >> student[n].class_id;

	int flag = 0;
	for (int i = 0; i < classd_num; i++)
	{
		if (!strcmp(student[n].class_id, classd[i].id))
		{
			flag++;
		}
	}
	if (flag == 0)
	{
		cout << "不存在该班级信息，添加失败！" << endl;
		return;
	}

	n++;
	cout << "添加学生信息成功！" << endl;
}
//查询学生信息
void List::select_student()
{
	if (n <= 0)
	{
		cout << "没有学生信息，请先录入！" << endl;
		return;
	}
	cout << "1.按学号查询  2.按姓名查询：" << endl;
	int chioce;
	cin >> chioce;
	if (chioce == 1)
	{
		cout << "请输入查询的学号号：";
		char id[20];
		int temp = 0;
		cin >> id;
		for (int i = 0; i < n; i++)
		{
			if (!strcmp(id, student[i].id))
			{
				temp++;
				cout << "学号：" << student[i].id;
				cout << "  姓名：" << student[i].name;
				cout << "  出生年月：" << student[i].birthday;
				cout << "  系别：" << student[i].department;
				cout << "  联系电话：" << student[i].phone;
				cout << "  所属班级编号：" << student[i].class_id << endl;
				break;
			}
		}
		if (temp == 0)
		{
			cout << "查找的学生信息不存在！" << endl;
		}
	}
	else if (chioce == 2)
	{
		cout << "请输入查询的姓名：";
		char name[20];
		int temp = 0;
		cin >> name;
		for (int i = 0; i < n; i++)
		{
			if (!strcmp(name, student[i].name))
			{
				temp++;
				cout << "学号：" << student[i].id;
				cout << "  姓名：" << student[i].name;
				cout << "  出生年月：" << student[i].birthday;
				cout << "  系别：" << student[i].department;
				cout << "  联系电话：" << student[i].phone;
				cout << "  所属班级编号：" << student[i].class_id << endl;
				break;
			}
		}
		if (temp == 0)
		{
			cout << "查找的学生信息不存在！" << endl;
		}
	}
	else
	{
		cout << "输入有误！" << endl;
	}
}
//删除学生信息
void List::delete_student()
{
	if (n <= 0)
	{
		cout << "没有学生信息，请先录入！" << endl;
		return;
	}
	cout << "请输入删除的学号：";
	char id[20];
	int temp = 0;
	cin >> id;
	for (int i = 0; i < n; i++)
	{
		if (!strcmp(id, student[i].id))
		{
			temp++;

			for (int j = i; j < n - 1; j++)
			{
				student[j] = student[j + 1];
			}
			n--;
			cout << "删除学生信息成功！" << endl;
			break;
		}
	}
	if (temp == 0)
	{
		cout << "删除的学生信息不存在！" << endl;
	}

}
//修改学生信息
void List::update_student()
{
	if (n <= 0)
	{
		cout << "没有学生信息，请先录入！" << endl;
		return;
	}
	cout << "请输入修改的学号：";
	char id[20];
	int temp = 0;
	cin >> id;
	for (int i = 0; i < n; i++)
	{
		if (!strcmp(id, student[i].id))
		{
			temp++;
			cout << "请输入新的姓名：";
			cin >> student[i].name;
			cout << "请输入出生年月：";
			cin >> student[i].birthday;
			cout << "请输入系别：";
			cin >> student[i].department;
			cout << "请输入新的联系电话：";
			cin >> student[i].phone;
			cout << "修改成功！" << endl;
			break;
		}
	}
	if (temp == 0)
	{
		cout << "编辑的学生信息不存在！" << endl;
	}

}
bool compareStudentid(Student x, Student y)
{
	return x.id < y.id;
}
//浏览学生信息
void List::show_student()
{
	if (n <= 0)
	{
		cout << "没有学生信息，请先录入！" << endl;
		return;
	}

	for (int i = 0; i < n; i++)
	{
		cout << "学号：" << student[i].id;
		cout << "  姓名：" << student[i].name;
		cout << "  出生年月：" << student[i].birthday;
		cout << "  系别：" << student[i].department;
		cout << "  联系电话：" << student[i].phone;
		cout << "  所属班级编号：" << student[i].class_id << endl;
	}
	/*cout << "\t\t 1.无序输出  2.有序输出" << endl;
	int choice;
	cin >> choice;
	cout << endl;
	switch (choice)
	{
	case 1:
	{
		for (int i = 0; i < n; i++)
		{
			cout << "学号：" << student[i].id;
			cout << "  姓名：" << student[i].name;
			cout << "  出生年月：" << student[i].birthday;
			cout << "  系别：" << student[i].department;
			cout << "  联系电话：" << student[i].phone;
			cout << "  所属班级编号：" << student[i].class_id << endl;
		}
	}
	case 2:
	{
		Student temp[50];
		for (int i = 0; i < n; i++)
		{
			temp[i] = student[i];
		}
		sort(temp, temp + n, compareStudentid);
		for (int i = 0; i < n; i++)
		{
			cout << "学号：" << temp[i].id;
			cout << "  姓名：" << temp[i].name;
			cout << "  出生年月：" << temp[i].birthday;
			cout << "  系别：" << temp[i].department;
			cout << "  联系电话：" << temp[i].phone;
			cout << "  所属班级编号：" << temp[i].class_id << endl;
		}

	}
	}*/
}


//教师登录
int List::login_teacher()
{
	if (teacher_num <= 0)
	{
		cout << "没有教师信息，请先录入！" << endl;
		return -1;
	}
	char id[20];
	char pwd[20];
	cout << "请输入登录的教师编号：" << endl;
	cin >> id;
	cout << "请输入登录的教师密码：" << endl;
	cin >> pwd;
	for (int i = 0; i < teacher_num; i++)
	{
		if (!strcmp(id, teacher[i].id) && !strcmp(pwd, teacher[i].pwd))
		{
			cout << "登录成功！" << endl;
			return i;
		}
	}

	cout << "登录失败！" << endl;
	return -1;

}
//学生登录
int List::login_student()
{
	if (s_n <= 0)
	{
		cout << "没有学生信息，请先录入！" << endl;
		return -1;
	}
	char id[20];
	char pwd[20];
	cout << "请输入登录的学生编号：" << endl;
	cin >> id;
	cout << "请输入登录的学生密码：" << endl;
	cin >> pwd;
	for (int i = 0; i < s_n; i++)
	{
		if (!strcmp(id, student[i].id) && !strcmp(pwd, student[i].pwd))
		{
			cout << "登录成功！" << endl;
			return i;
		}
	}

	cout << "登录失败！" << endl;
	return -1;

}
//管理员登录
int List::admin_login()
{
	char id[20];
	char pwd[20];
	cout << "请输入登录的管理员账号：" << endl;
	cin >> id;
	cout << "请输入登录的管理员密码：" << endl;
	cin >> pwd;

	if (!strcmp(id, "admin") && !strcmp(pwd, "123"))
	{
		cout << "登录成功！" << endl;
		return 1;
	}


	cout << "登录失败！" << endl;
	return -1;

}
//教师修改密码
void List::pwd_teacher(int index)
{
	cout << "请输入新的教师密码：";
	cin >> teacher[index].pwd;
	cout << "修改成功！" << endl;
}
//学生修改密码
void List::pwd_student(int index)
{
	cout << "请输入新的学生密码：";
	cin >> student[index].pwd;
	cout << "修改成功！" << endl;
}


//选课
void List::choose()
{//stu是学生管理系统对象   sub是课程管理系统对象
	cout << "请输入选课的学号：";
	char stu_id[20];
	int temp = 0;
	cin >> stu_id;
	for (int i = 0; i < n; i++)
	{
		if (!strcmp(stu_id, student[i].id))
		{
			temp++;
			cout << "请输入选修课程编号：";
			char sub_id[20];
			int temp_ = 0;
			cin >> sub_id;
			for (int j = 0; j < s_n; j++)
			{
				if (!strcmp(sub_id, subject[j].id))//看看课程信息里面是否有这门课
				{

					;

					for (int k = 0; k < num; k++)
					{
						if (!strcmp(stu_id, s_course[k].stu_id))
						{
							for (int z = 0; z < s_n; z++)
							{
								if (!strcmp(s_course[k].sub_id, subject[z].id))
								{
									if (!strcmp(subject[z].time, subject[j].time))
									{
										cout << "选课时间冲突，选课失败！" << endl;
										return;
									}
								}
							}

						}
					}

					temp_++;
					strcpy_s(s_course[num].stu_id, stu_id);
					strcpy_s(s_course[num].sub_id, sub_id);
					s_course[num].score = 0;

					num++;

					subject[j].num++;
					cout << "选课成功！" << endl;
					return;
				}
			}
			if (temp_ == 0)
			{
				cout << "课程编号不存在，选课失败！" << endl;
				return;
			}
		}
	}
	if (temp == 0)
	{
		cout << "学号不存在，选课失败！" << endl;
	}
}
//退课
void List::refund()
{
	cout << "请输入退课的学号：";
	char stu_id[20];
	int temp = 0;
	cin >> stu_id;
	for (int i = 0; i < num; i++)
	{
		if (!strcmp(stu_id, s_course[i].stu_id))
		{
			temp++;
			cout << "请输入退课的课程编号：";
			char sub_id[20];
			int temp_ = 0;
			cin >> sub_id;

			if (strcmp(sub_id, s_course[i].sub_id) != 0)
			{
				cout << "没有选修该课，退课失败！" << endl;
				return;
			}

			for (int j = i; j < num - 1; j++)
			{
				s_course[j] = s_course[j + 1];
			}
			num--;

			for (int j = 0; j < s_n; j++)
			{
				if (!strcmp(sub_id, subject[j].id))
				{
					temp_++;

					subject[j].num--;
					cout << "退课成功！" << endl;
					return;
				}
			}
			if (temp_ == 0)
			{
				cout << "课程编号不存在，退课失败！" << endl;
				return;
			}
		}
	}
	if (temp == 0)
	{
		cout << "学号不存在，退课失败！" << endl;
	}
}
//查看选课信息
bool compareSelect(SelectCourse x, SelectCourse y)
{
	return x.sub_id < y.sub_id;
}
void List::show()
{
	if (num == 0)
	{
		cout << "没有选课信息！" << endl;
		return;
	}
	for (int i = 0; i < num; i++)
	{
		cout << "学号：" << s_course[i].stu_id << "  ";
		cout << "选课编号：" << s_course[i].sub_id << endl;
	}

	/*cout << "\t\t 1.无序输出  2.有序输出";
	int choice;
	cin >> choice;
	switch (choice)
	{
	case 1:
	{

		for (int i = 0; i < num; i++)
		{
			cout << "学号：" << s_course[i].stu_id << "  ";
			cout << "选课编号：" << s_course[i].sub_id << endl;
		}
	}
	case 2:
	{
		SelectCourse temp[200];
		for (int i = 0; i < num; i++)
		{
			temp[i] = s_course[i];
		}
		sort(temp, temp + num, compareSelect);
		for (int i = 0; i < num; i++)
		{

				cout << "学号：" << temp[i].stu_id << "  ";
				cout << "选课编号：" << temp[i].sub_id << endl;

		}
	}
	}*/
}
//学生成绩打分
void List::add_score()
{
	if (num == 0)
	{
		cout << "没有选课信息！" << endl;
		return;
	}
	cout << "下面是可供打分的课程:" << endl;
	show();
	char id[20];
	cout << "请输入打分的学号：" << endl;
	cin >> id;

	for (int i = 0; i < num; i++)
	{
		if (!strcmp(id, s_course[i].stu_id))
		{
			cout << "学号：" << s_course[i].stu_id << "  ";
			cout << "选课编号：" << s_course[i].sub_id << endl;
			cout << "请输入成绩：" << endl;
			cin >> s_course[i].score;
		}

	}

	cout << "打分结束！" << endl;

}
//学生成绩排序  选了该课程的学生的成绩排序
void List::sort_score()
{
	if (num == 0)
	{
		cout << "没有选课信息！" << endl;
		return;
	}

	char id[20];
	SelectCourse s[100];
	int n = 0;
	cout << "请输入排序的课程编号：" << endl;
	cin >> id;

	for (int i = 0; i < num; i++)
	{
		if (!strcmp(id, s_course[i].sub_id))
		{
			s[n] = s_course[i];
			n++;
			cout << "学号：" << s_course[i].stu_id << "  ";
			cout << "选课编号：" << s_course[i].sub_id << endl;
		}
	}

	for (int i = 0; i < num; i++)
	{
		for (int j = 0; j < num - 1 - i; j++)
		{
			if (s[j].score > s[j + 1].score)
			{
				SelectCourse ss = s[j];
				s[j] = s[j + 1];
				s[j + 1] = ss;
			}
		}

	}

	cout << "学生成绩排序信息如下：" << endl;
	for (int i = 0; i < num; i++)
	{

		cout << "学号：" << s_course[i].stu_id << "  ";
		cout << "选课编号：" << s_course[i].sub_id << "  ";
		cout << "成绩：" << s_course[i].score << endl;

	}
}







//主菜单
void menu()
{
	cout << "*************************************" << endl;
	cout << "*       学生选课管理系统            *" << endl;
	cout << "*         1.管理员                  *" << endl;
	cout << "*         2.教师                    *" << endl;
	cout << "*         3.学生                    *" << endl;
	cout << "*         0.退出系统                *" << endl;
	cout << "*************************************" << endl;
}
void admin_menu1()
{
	cout << "*************************************" << endl;
	cout << "*        学生信息管理系统           *" << endl;
	cout << "*         1.增加学生信息            *" << endl;
	cout << "*         2.查询学生信息            *" << endl;
	cout << "*         3.删除学生信息            *" << endl;
	cout << "*         4.修改学生信息            *" << endl;
	cout << "*         5.浏览学生信息            *" << endl;
	cout << "*         6.保存学生信息            *" << endl;
	cout << "*         0.返回上一级              *" << endl;
	cout << "*************************************" << endl;
}
void admin_menu2()
{
	cout << "*************************************" << endl;
	cout << "*        课程信息管理系统           *" << endl;
	cout << "*         1.增加课程信息            *" << endl;
	cout << "*         2.查询课程信息            *" << endl;
	cout << "*         3.删除课程信息            *" << endl;
	cout << "*         4.修改课程信息            *" << endl;
	cout << "*         5.浏览课程信息            *" << endl;
	cout << "*         6.保存课程信息            *" << endl;
	cout << "*         0.返回上一级              *" << endl;
	cout << "*************************************" << endl;
}
void admin_menu3()
{
	cout << "*************************************" << endl;
	cout << "*        班级信息管理系统           *" << endl;
	cout << "*         1.增加班级信息           *" << endl;
	cout << "*         2.查询班级信息           *" << endl;
	cout << "*         3.删除班级信息           *" << endl;
	cout << "*         4.修改班级信息           *" << endl;
	cout << "*         5.浏览班级信息           *" << endl;
	cout << "*         6.保存班级信息           *" << endl;
	cout << "*         0.返回上一级             *" << endl;
	cout << "*************************************" << endl;
}
void admin_menu4()
{
	cout << "*************************************" << endl;
	cout << "*        教师信息管理系统           *" << endl;
	cout << "*         1.增加教师信息           *" << endl;
	cout << "*         2.查询教师信息           *" << endl;
	cout << "*         3.删除教师信息           *" << endl;
	cout << "*         4.修改教师信息           *" << endl;
	cout << "*         5.浏览教师信息           *" << endl;
	cout << "*         6.保存教师信息           *" << endl;
	cout << "*         0.返回上一级             *" << endl;
	cout << "*************************************" << endl;
}
void admin_menu()
{
	cout << "*************************************" << endl;
	cout << "*            管理员                 *" << endl;
	cout << "*         1.学生信息管理系统        *" << endl;
	cout << "*         2.课程信息管理系统        *" << endl;
	cout << "*         3.班级信息管理系统        *" << endl;
	cout << "*         4.教师信息管理系统        *" << endl;
	cout << "*         0.返回上一级              *" << endl;
	cout << "*************************************" << endl;
}
void teacher_menu1()
{
	cout << "*************************************" << endl;
	cout << "*        课程信息管理系统           *" << endl;
	cout << "*         1.增加课程信息            *" << endl;
	cout << "*         2.查询课程信息            *" << endl;
	cout << "*         3.删除课程信息            *" << endl;
	cout << "*         4.修改课程信息            *" << endl;
	cout << "*         5.浏览课程信息            *" << endl;
	cout << "*         6.保存课程信息            *" << endl;
	cout << "*         0.返回上一级              *" << endl;
	cout << "*************************************" << endl;
}
void teacher_menu2()
{
	cout << "*************************************" << endl;
	cout << "*        班级信息管理系统           *" << endl;
	cout << "*         1.增加班级信息            *" << endl;
	cout << "*         2.查询班级信息            *" << endl;
	cout << "*         3.删除班级信息            *" << endl;
	cout << "*         4.修改班级信息            *" << endl;
	cout << "*         5.浏览班级信息            *" << endl;
	cout << "*         6.保存班级信息            *" << endl;
	cout << "*         0.返回上一级              *" << endl;
	cout << "*************************************" << endl;
}
void teacher_menu3()
{
	cout << "*************************************" << endl;
	cout << "*        成绩信息管理系统           *" << endl;
	cout << "*         1.学生成绩打分           *" << endl;
	cout << "*         2.学生成绩排序           *" << endl;
	cout << "*         0.返回上一级              *" << endl;
	cout << "*************************************" << endl;
}
void teacher_menu()
{
	cout << "*************************************" << endl;
	cout << "*            教师                   *" << endl;
	cout << "*         1.课程信息管理系统        *" << endl;
	cout << "*         2.班级信息管理系统        *" << endl;
	cout << "*         3.成绩信息管理系统        *" << endl;
	cout << "*         4.修改密码               *" << endl;
	cout << "*         0.返回上一级              *" << endl;
	cout << "*************************************" << endl;
}
void select_menu()
{
	cout << "*************************************" << endl;
	cout << "*          学生                     *" << endl;
	cout << "*         1.选课                    *" << endl;
	cout << "*         2.退课                    *" << endl;
	cout << "*         3.查看选课信息            *" << endl;
	cout << "*         4.查看课程信息            *" << endl;
	cout << "*         5.查看班级信息            *" << endl;
	cout << "*         6.查看教师信息            *" << endl;
	cout << "*         7.修改密码                *" << endl;
	cout << "*         0.返回上一级              *" << endl;
	cout << "*************************************" << endl;
}



//主函数
int main()
{


	List list;
	list.read_subject();
	list.read_student();
	list.read();
	list.read_class();
	list.read_teacher();
	while (1)
	{
		system("cls");
		menu();
		int choice;
		cout << "请输入选择：" << endl;
		cin >> choice;
		switch (choice)
		{
			//管理员登录
		case 1:
		{
			system("cls");
			int index = list.admin_login();
			if (index != -1)
			{
				while (1)
				{
					system("cls");
					admin_menu();//选择进入哪个系统
					int choice1;
					cout << "请输入选择：" << endl;
					cin >> choice1;
					switch (choice1)
					{
					case 1://进入学生信息管理系统
					{
						while (1)
						{
							system("cls");
							admin_menu1();
							int choice11;
							cout << "请输入选择：" << endl;
							cin >> choice11;
							switch (choice11)//进入学生信息管理系统的具体函数
							{
							case 1://增加学生信息
							{
								system("cls");
								list.add_student();
								system("pause");
								break;
							}

							case 2://查询学生信息
							{
								system("cls");
								list.select_student();
								system("pause");
								break;
							}

							case 3://删除学生信息
							{
								system("cls");
								list.delete_student();
								system("pause");
								break;
							}
							case 4://修改学生信息
							{
								system("cls");
								list.update_student();
								system("pause");
								break;
							}

							case 5://浏览学生信息
							{
								system("cls");
								list.show_student();
								system("pause");
								break;
							}
							case 6://保存学生信息
							{
								system("cls");
								list.save_student();
								system("pause");
								break;
							}
							case 0:
							{
								system("cls");
								goto pre1;
							}
							default:
							{system("cls");
							cout << "输入格式错误，请重新输入：" << endl;
							system("pause");
							break;
							}
							}
						}
					pre1:
						break;
					}

					case 2://进入课程信息管理系统
					{system("cls");
					while (1)
					{
						system("cls");
						admin_menu2();
						cout << "请输入选择：" << endl;
						int choice12;
						cin >> choice12;
						switch (choice12)
						{
						case 1://添加课程信息
						{
							system("cls");
							list.add_subject();
							system("pause");
							break;
						}

						case 2://查询课程信息
						{
							system("cls");
							list.select_subject();
							system("pause");
							break;
						}
						case 3://删除课程信息
						{
							system("cls");
							list.delete_subject();
							system("pause");
							break;
						}

						case 4://修改课程信息
						{
							system("cls");
							list.update_subject();
							system("pause");
							break;
						}
						case 5://浏览课程信息
						{
							system("cls");
							list.show_subject();
							system("pause");
							break;
						}
						case 6://保存课程信息
						{
							system("cls");
							list.save_subject();
							system("pause");
							break;
						}
						case 0:
						{
							system("cls");
							goto pre2;
						}
						default:
						{system("cls");
						cout << "格式输入错误请重新输入：" << endl;
						system("pause");
						break;
						}
						}
					}
				pre2:
					break;
					}

					case 3://进入班级信息管理系统
					{
						system("cls");
						while (1)
						{
							system("cls");
							admin_menu3();
							cout << "请输入选择：" << endl;
							int choice13;
							cin >> choice13;
							switch (choice13)
							{
							case 1://增加班级信息
							{
								system("cls");
								list.add_class();
								system("pause");
								break;
							}

							case 2://查询班级信息
							{
								system("cls");
								list.select_class();
								system("pause");
								break;
							}

							case 3://删除班级信息
							{
								system("cls");
								list.delete_class();
								system("pause");
								break;
							}

							case 4://修改班级信息
							{
								system("cls");
								list.update_class();
								system("pause");
								break;
							}

							case 5://浏览班级信息
							{
								system("cls");
								list.show_class();
								system("pause");
								break;
							}

							case 6://保存班级信息
							{
								system("cls");
								list.save_class();
								system("pause");
								break;
							}

							case 0:
							{
								system("cls");
								goto pre3;
							}
							default:
							{
								system("cls");
								cout << "输入格式错误，请重新输入：" << endl;
								system("pause");
								break;
							}
							}


						}
					pre3:
						break;
					}

					case 4://进入教师管理系统
					{
						system("cls");
						while (1)
						{
							system("cls");
							admin_menu4();
							cout << "请输入选择：" << endl;
							int choice14;
							cin >> choice14;
							switch (choice14)
							{
							case 1://增加教师信息
							{
								system("cls");
								list.add_teacher();
								system("pause");
								break;
							}

							case 2://查询教师信息
							{
								system("cls");
								list.select_teacher();
								system("pause");
								break;
							}

							case 3://删除教师信息
							{
								system("cls");
								list.delete_teacher();
								system("pause");
								break;
							}

							case 4: //修改教师信息
							{
								system("cls");
								list.update_teacher();
								system("pause");
								break;
							}

							case 5://浏览教师信息
							{
								system("cls");
								list.show_teacher();
								system("pause");
								break;
							}

							case 6://保存教师信息
							{
								system("cls");
								list.save_teacher();
								system("pause");
								break;
							}

							case 0:
							{
								system("cls");
								goto pre4;
							}
							default:
							{
								system("cls");
								cout << "格式输入有误请重新输入：" << endl;
								system("pause");
								break;
							}
							}
						}
					pre4:
						break;
					}

					case 0://返回上一级
					{system("cls");
					goto pre5;
					}
					default:
					{
						system("cls");
						cout << "格式输入有误请重新输入：" << endl;
						system("pause");
						break;
					}

					}
				}


			}
		pre5:
			break;
		}

		case 2://教师登录
		{
			int index = list.login_teacher();
			if (index != -1)
			{
				while (1)//进入教师登录界面
				{
					system("cls");
					teacher_menu();
					cout << "请输入选择：" << endl;
					int choice2;
					cin >> choice2;
					switch (choice2)
					{
					case 1://进入课程信息管理系统
					{
						system("cls");
						while (1)
						{
							system("cls");
							teacher_menu1();
							cout << "请输入选择：" << endl;
							int choice21;
							cin >> choice21;
							switch (choice21)
							{
							case 1://增加课程
							{
								system("cls");
								list.add_subject();
								system("pause");
								break;
							}
							case 2://查询课程
							{
								system("cls");
								list.select_subject();
								system("pause");
								break;
							}

							case 3://删除课程信息
							{
								system("cls");
								list.delete_subject();
								system("pause");
								break;
							}

							case 4://修改课程信息
							{
								system("cls");
								list.update_subject();
								system("pause");
								break;
							}
							case 5://浏览课程信息
							{
								system("cls");
								list.show_subject();
								system("pause");
								break;
							}
							case 6://保存课程信息
							{
								system("cls");
								list.save_subject();
								system("pause");
								break;
							}
							case 0://退回
							{
								system("cls");
								goto pre7;
							}
							default: {
								system("cls");
								cout << "格式输入错误，请重新输入：" << endl;
								system("pause");
								break;
							}
							}
						}
					pre7:
						break;
					}

					case 2://进入班级信息管理系统
					{
						system("cls");
						while (1)
						{
							system("cls");
							teacher_menu2();
							cout << "请输入选择：" << endl;
							int choice22;
							cin >> choice22;
							switch (choice22)
							{

							case 1://增加班级信息
							{
								system("cls");
								list.add_class();
								system("pause");
								break;
							}

							case 2://查询班级信息
							{
								system("cls");
								list.select_class();
								system("pause");
								break;
							}

							case 3://删除班级信息
							{
								system("cls");
								list.delete_class();
								system("pause");
								break;
							}

							case 4://修改班级信息
							{
								system("cls");
								list.update_class();
								system("pause");
								break;
							}

							case 5://浏览班级信息
							{
								system("cls");
								list.show_class();
								system("pause");
								break;
							}

							case 6://保存班级信息
							{
								system("cls");
								list.save_class();
								system("pause");
								break;
							}

							case 0:
							{
								system("cls");
								goto pre8;
							}
							default:
							{
								system("cls");
								cout << "格式输入错误，请重新输入：" << endl;
								system("pause");
								break;
							}
							}
						}
					pre8:
						break;
					}

					case 3://进入成绩信息管理系统
					{
						system("cls");
						while (1)
						{
							system("cls");
							teacher_menu3();
							cout << "请输入选择：" << endl;
							int choice23;
							cin >> choice23;
							switch (choice23)
							{

							case 1://进入学生成绩打分
							{
								system("cls");
								list.add_score();
								system("pause");
								break;
							}
							case 2://学生成绩排序
							{
								system("cls");
								list.sort_score();
								system("pause");
								break;
							}
							case 0:
							{
								system("cls");
								goto  pre10;
							}
							default:
							{
								system("cls");
								cout << "格式输入有误请重新输入：" << endl;
								system("pause");
								break;
							}
							}
						}
					pre10:
						break;
					}

					case 4:
					{
						system("cls");
						list.pwd_teacher(index);
						system("pause");
						break;
					}
					case 0:
					{system("cls");
					goto pre11;
					}
					}

				}

			}
		pre11:
			break;

		}

		case 3://学生登录
		{int index = list.login_student();
		if (index != -1)
		{
			system("cls");
			while (1)
			{
				system("cls");
				select_menu();
				cout << "请输入选择：" << endl;
				int choice3;
				cin >> choice3;
				switch (choice3)
				{

				case 1://选课
				{
					system("cls");
					list.choose();
					system("pause");
					break;
				}

				case 2://退课
				{
					system("cls");
					list.refund();
					system("pause");
					break;
				}
				case 3://查看选课信息
				{
					system("cls");
					list.show();
					system("pause");
					break;
				}
				case 4:
				{
					system("cls");
					list.show_subject();
					system("pause");
					break;
				}
				case 5:
				{
					system("cls");
					list.select_class();
					system("pause");
					break;
				}
				case 6:
				{
					system("cls");
					list.select_teacher();
					system("pause");
					break;
				}
				case 7:
				{
					list.pwd_student(index);
					system("pause");
					break;
				}
				case 0:
				{
					system("cls");
					goto pre14;
				}

				default:
				{
					system("cls");
					cout << "格式输入有误，请重新输入：" << endl;
					system("pause");
					break;
				}
				}
			}
		pre14:
			break;
		}



		}

		case 0:
		{
			system("cls");
			list.save_subject();
			list.save_student();
			list.save();
			list.save_class();
			list.save_teacher();
			cout << "谢谢使用！" << endl;
			return 0;
		}
		default:
		{
			system("cls");
			cout << "格式输入有误请重新输入：" << endl;
			break;
		}
		}
	}
	return 0;
}
